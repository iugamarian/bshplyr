#!/bin/bash

# INSTALL "MPV" BEFORE RUNNING THIS SCRIPT !

# WIRINGPI IS DEPRECATED, USING SYSFS IN THE KERNEL, SYSFS CAN NOT ENABLE CPU PULL UP RESISTORS !

# OBLIGATORY PHYSICAL PULL UP TO 3.3 V RESISTORS OF ABOUT 100KOHM REQUIRED FOR WORKING BUTTONS !

# IF "BACK" AND "NEXT" ARE BOTH PRESSED THIS IS "DELETE" SELECTION

### [ SELECT GPIO PINS FOR THE BUTTONS, DISABLE [UART]/I2C/SPI ON THE SELECTED GPIO PINS ] ###

BACK_BUTTON_ADRESS="14"
NEXT_BUTTON_ADRESS="15"

### [ SELECT BUTTONS DEBOUNCE REPEAT ] ###

BACK_BUTTON_DEBOUNCE="9"
NEXT_BUTTON_DEBOUNCE="9"
DELETE_BUTTON_DEBOUNCE="9"

### [ OTHER VARIABLES FOR THIS SCRIPT ] ###

BACK_BUTTON_VALUE="1"
NEXT_BUTTON_VALUE="1"
BACK_BUTTON_CONFIRMED="1"
NEXT_BUTTON_CONFIRMED="1"
DELETE_BUTTON_CONFIRMED="1"

### [ FUNCTIONS, THEY WILL RUN ONLY IF CALLED BY NAME ] ###

back_song ()
{
	mpv --no-audio-display /run/back.wav
}

next_song ()
{
	mpv --no-audio-display /run/next.wav
}

delete_song ()
{
	mpv --no-audio-display /run/deleted.wav
}

#### [ BOOTING WITH SYSTEMD ] ####

# Lite boot delay (no x server)
/bin/sleep 30

# Heavy boot delay (x server)
#/bin/sleep 60

# Sounds for delete and next
espeak -a 600 -p 0 -w /run/back.wav "Yes now back."
espeak -a 600 -p 0 -w /run/next.wav "Yes now next."
espeak -a 600 -p 0 -w /run/deleted.wav "Yes now deleted."

#### [ SYNC DATA TO PROTECT AGAINST CORRUPTION FROM POWER LOSS ] ####

# This is saving all changes done to disk by the boot process
/bin/sleep 0.1
sync
bin/sleep 0.1

#### [ CONTROL LOOP THAT REPEATS INFINETLY ] ####

while true

do

### [ READ BACK BUTTON ] ###

BACK_BUTTON_VALUE="1"
cd /sys/class/gpio/gpio$BACK_BUTTON_ADRESS
if [ `cat value` = 0 ]
then
BACK_BUTTON_VALUE="0"
fi

# Wait for the GPIO driver to rest
/bin/sleep 0.05

### [ READ NEXT BUTTON ] ###

NEXT_BUTTON_VALUE="1"
cd /sys/class/gpio/gpio$NEXT_BUTTON_ADRESS
if [ `cat value` = 0 ]
then
NEXT_BUTTON_VALUE="0"
fi

### [ DEBOUNCE THE BUTTONS ] ###

if [ $BACK_BUTTON_VALUE -eq "0" ] && [ $NEXT_BUTTON_VALUE -eq "1" ]
then
BACK_BUTTON_DEBOUNCE=$((BACK_BUTTON_DEBOUNCE-1))
fi

if [ $BACK_BUTTON_VALUE -eq "1" ] && [ $NEXT_BUTTON_VALUE -eq "0" ]
then
NEXT_BUTTON_DEBOUNCE=$((NEXT_BUTTON_DEBOUNCE-1))
fi

if [ $BACK_BUTTON_VALUE -eq "0" ] && [ $NEXT_BUTTON_VALUE -eq "0" ]
then
DELETE_BUTTON_DEBOUNCE=$((DELETE_BUTTON_DEBOUNCE-1))
fi

### [ CONFIRM THE BUTTONS AFTER DEBOUNCE ] ###

if [ $BACK_BUTTON_DEBOUNCE -eq "0" ]
then
BACK_BUTTON_DEBOUNCE="9"
NEXT_BUTTON_DEBOUNCE="9"
DELETE_BUTTON_DEBOUNCE="9"
BACK_BUTTON_CONFIRMED="0"
NEXT_BUTTON_CONFIRMED="1"
DELETE_BUTTON_CONFIRMED="1"
fi

if [ $NEXT_BUTTON_DEBOUNCE -eq "0" ]
then
BACK_BUTTON_DEBOUNCE="9"
NEXT_BUTTON_DEBOUNCE="9"
DELETE_BUTTON_DEBOUNCE="9"
BACK_BUTTON_CONFIRMED="1"
NEXT_BUTTON_CONFIRMED="0"
DELETE_BUTTON_CONFIRMED="1"
fi

if [ $DELETE_BUTTON_DEBOUNCE -eq "0" ]
then
BACK_BUTTON_DEBOUNCE="9"
NEXT_BUTTON_DEBOUNCE="9"
DELETE_BUTTON_DEBOUNCE="9"
BACK_BUTTON_CONFIRMED="1"
NEXT_BUTTON_CONFIRMED="1"
DELETE_BUTTON_CONFIRMED="0"
fi

### [ ACTION FOR THE CONFIRMED BUTTONS ] ###

if [ $BACK_BUTTON_CONFIRMED -eq "0" ]
then
BACK_BUTTON_CONFIRMED="1"
back_song
fi

if [ $NEXT_BUTTON_CONFIRMED -eq "0" ]
then
NEXT_BUTTON_CONFIRMED="1"
next_song
fi

if [ $DELETE_BUTTON_CONFIRMED -eq "0" ]
then
DELETE_BUTTON_CONFIRMED="1"
delete_song
fi

### [ GO SLOWER THROUGH THE INFINITE LOOP IF NO CHANGES ] ###

	# But be fast enough to sense the buttons and stopped player with snapiness

sleep 0.05

done
